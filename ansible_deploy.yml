---

- hosts: localhost
  become: no
  connection: local
  vars:
    region: sa-east-1
    image_ami: ami-0fb83963 # Ubuntu 14.04
    security_group: sg_cake
    vpc_subnet_id: subnet-7ac9fb1f
    instance_type: t2.micro
    key_name: cake_key
    key_file: cake_key.pem

  tasks:
  - name: Delete EC2 keypair
    ec2_key: name={{ key_name }} state=absent region={{ region }}

  - name: Create EC2 keypair
    ec2_key: name={{ key_name }} state=present region={{ region }}
    register: result

  - name: Create local private key
    copy: content={{ result.key.private_key }} dest={{ key_file }} owner=jonatas group=jonatas mode=0400

  - name: Launch instance
    ec2:
      key_name: "{{ key_name }}"
      group: "{{ security_group }}"
      instance_type: "{{ instance_type }}"
      image: "{{ image_ami }}"
      region: "{{ region }}"
      vpc_subnet_id: "{{ vpc_subnet_id }}"
      assign_public_ip: yes
      wait: true
    register: ec2

  - name: Add new instance to host group
    add_host: hostname={{ item.public_ip }} groupname=cake ansible_ssh_private_key_file={{ key_file }} ansible_user=ubuntu
    with_items: ec2.instances

  - name: Wait for SSH to come up
    wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
    with_items: ec2.instances

- name: Configure instance
  hosts: cake
  become: True
  environment:
    APP_ENV: 'production'
  vars:
    user: ubuntu

  tasks:

  - name: Install docker repo key
    apt_key: keyserver=hkp://p80.pool.sks-keyservers.net:80 id=58118E89F3A912897C070ADBF76221572C52609D

  - name: Install docker repo
    apt_repository: repo='deb https://apt.dockerproject.org/repo ubuntu-trusty main' state=present

  - name: Update apt repository
    apt: update_cache=yes cache_valid_time=3600

  - name: Install OS packages
    apt: name={{ item }} state=present
    with_items:
      - docker-engine
      - python-pip
      - python3-dev
      - python-dev
      - python-pip
      - libxml2-dev
      - libxslt1-dev
      - zlib1g-dev
      - libffi-dev
      - libssl-dev

  - name: Add user ubuntu to docker group
    user: name={{ user }} groups=docker append=yes

  - name: Install docker-compose
    pip: name=docker-compose state=present

  - name: Clone cake repository
    git: repo=git@github.com:jonatasbaldin/cake.git dest="/home/{{ user }}/cake"

  - name: Start docker
    service: name=docker state=started enabled=yes

  - name: Run docker-compose commands
    command: "{{ item }}"
    with_items:
      - docker-compose -f docker-compose-production.yml build
      - docker-compose -f docker-compose-production.yml up
    args:
      chdir: "/home/{{ user }}/cake/"
    become: no
    tags: compose

  - name: Run django migrate
    command: "{{ item }} "
    with_items:
      - docker-compose run web python manage.py makemigrations
      - docker-compose run web python manage.py migrate
    args:
      chdir: "/home/{{ user }}/cake/"
    become: no
    tags: compose
